version: '3.7'

services:
  shop:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 80
    volumes:
      - .:/usr/src/personalised_nudges
    ports:
      - 80:80
    depends_on:
      - pg
    restart: always

  greenplum:
    container_name: greenplum
    build:
      context: ./greenplum
      dockerfile: Dockerfile
    volumes:
      - ./greenplum/gpdb:/data
    ports:
      - "5432:5432"

  pg:
    image: postgres:13
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/public.sql
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "pass"
    ports: 
      - 5433:5432
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    
  zookeeper:
    image: debezium/zookeeper:1.9.2.Final
    ports:
      - "2181:2181/tcp"
      - "2888:2888/tcp"
      - "3888:3888/tcp"

  kafka:
    image: debezium/kafka:1.9.2.Final
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  connect:
    container_name: connect
    image: debezium/connect:1.9.2.Final
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=connector-config
      - OFFSET_STORAGE_TOPIC=connector-offsets
      - STATUS_STORAGE_TOPIC=connector-status

    volumes:
      - ./postgresql-42.3.5.jar:/kafka/libs/postgresql-42.3.5.jar
      - ./kafka-connect-jdbc-10.4.0.jar:/kafka/connect/kafka-connect-jdbc/kafka-connect-jdbc-10.4.0.jar
      - ./log4j.properties:/kafka/config/log4j.properties
    depends_on:
      - kafka
      - zookeeper
      